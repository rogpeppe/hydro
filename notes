Tue 14 Feb 07:35:36 GMT 2017

On Zyxel router, port forwarding config in /etc/nat_pvc0/vserver*

Mon 13 Feb 23:28:17 GMT 2017

To make a "local" connection to cabinet-router:

	ssh -p 222  '-oKexAlgorithms=+diffie-hellman-group1-sha1' -L 5900:192.168.1.254:80 pi@borla.ddns.net

then use Chrome Virtual Hosts app to rewrite localhost:5900 to 192.168.1.254

Tue  7 Feb 18:43:25 GMT 2017

To decompile a device overlay file:

overlays are in /boot/uboot/pi2-kernel_22.snap/dtbs/overlays.tgz

	dtc -I dtb -O dts i2c-rtc.dtbo 

systemctl --global enable unit...

Sat  4 Feb 19:35:47 GMT 2017

build snap:

	remember to update version field if not using the store.
	
	cd snap
	snapcraft clean
	snapcraft build
	snapcraft snap

to install directly from .snap file:
	snap install --dangerous $snap.snap
	

enable ntp:

	timedatectl set-ntp true

systemd unit to sync time, in /etc/systemd/system/timesync.service

[Unit]
Wants=snap.hydroctl.hydroserver
Before=snap.hydroctl.hydroserver

[Service]
Type=oneshot
ExecStart=/bin/sh -c "echo pirt started > /tmp/pirtc.started"
ExecStart=/home/rogpeppe/pirtc -sys

[Install]
WantedBy=multi-user.target


To see logs for a systemd unit:
	journalctl -u $unitname
Note: "systemctl enable" doesn't seem to print warnings!

Mon Dec 14 16:47:26 GMT 2015

OK, so we want to actually get something going now!

User alters parameters, gets told when they change.


http://borla.ddns.net/


2015/10/13

questions:

colour theme? SASS?

accordion?

react vs bootstrap, foundation, ... ?

layout in general


unminify.com


How are we going to manage timeslots?

watcher:

func (w *Watcher) Next() bool	
func (w *Watcher) Look() io.Closer
func (w *Watcher) Change() io.Closer


	for w.Next() {
		x := w.Look()
		x.Close()
	}


x.y.z
new x.y
del x.y

or...

PUT /Cohorts/<id>/ActiveSlots/<id>/title
PUT /Cohorts/<id>/ActiveSlots/<id>/relays
POST /Cohorts/<id>/ActiveSlots/new -> <id>
PUT /Cohorts/<id>/ActiveSlots/<id>/MaxPower


PUT /data/Cohorts/<id>/ActiveSlots/<index>/Title


# media query
@media only screen and (max-width: 620px) {
	#classname {
		font-size: ..
	}
}

<meta name="viewport" content="width=device-width, initial-scale=1.0">

https://github.com/juju/juju-gui/blob/pyramid-fork/jujugui/static/gui/src/app/components/string-config/string-config.js

babelify Makefile:

	SHELL = /bin/bash
	.DEFAULT_GOAL := all
	
	BABEL := node_modules/.bin/babel
	ESLINT := node_modules/.bin/eslint
	
	BUILD_DIR := build/
	RAW_JS_FILES := $(shell find app -type f -name '*.js')
	BUILT_RAW_JS_FILES := $(patsubst app/%, $(BUILD_DIR)%, $(RAW_JS_FILES))
	
	define colorecho
		@tput setaf 2
		@echo $(1)
		@tput sgr0
	endef
	
	$(BUILD_DIR):
		@echo -n "Generating build directory. "
		@mkdir -p $(BUILD_DIR)
		$(call colorecho,"Done.")
	
	$(BUILD_DIR)%.js: app/%.js
		@echo -n "Creating $^. "
		@mkdir -p $(@D)
		@$(BABEL) $^ -o $@ --source-maps
		$(call colorecho,"Done.")
	
	.PHONY: all
	all: $(BUILD_DIR) deps babelize
	
	.PHONY: deps
	deps:
		@echo "Installing dependencies."
		@npm install
		$(call colorecho,"Done installing dependencies.")
	
	.PHONY: babelize
	babelize: $(BUILD_DIR)
		@echo "Running source files through babeljs."
		@$(BABEL) app --source-maps --out-dir=$(BUILD_DIR)
		$(call colorecho,"Done babeljs processing.")
	
	.PHONY: clean
	clean:
		@echo -n "Removing built files. "
		@rm -rf $(BUILD_DIR)
		$(call colorecho,"Done.")

Mon 29 Aug 22:43:33 BST 2016

First actual deployment (on desktop machine).

